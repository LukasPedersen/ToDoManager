@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}
<h1></h1>
<p>
    <a class="btn btn-primary" asp-page="Create">Create New</a>
</p>
<table class="table table-dark" id="myTable">
    <thead>
        <tr>
            <th scope="col">Name</th>
            <th scope="col">What to do</th>
            <th scope="col">Done?</th>
        </tr>
    </thead>
    <tbody>
        @foreach (ToDoManager.Models.ToDo toDo in Model.ToDoList)
        {
        <tr>
            <td>@Html.DisplayFor(modelItem => toDo.Name)</td>
            <td>@Html.DisplayFor(modelItem => toDo.WhatToDo)</td>
            <td>@Html.DisplayFor(modelItem => toDo.IsCompleted)</td>
            <td>
                <a class="btn btn-sm btn-info" asp-page="Details" asp-route-id="@toDo.Id">Details</a>
                | <a class="btn btn-sm btn-warning" asp-page="Edit" asp-route-id="@toDo.Id">Edit</a> |
                <a class="btn btn-sm btn-danger" asp-page="Delete" asp-route-id="@toDo.Id">Delete</a>
            </td>
        </tr>
        }
    </tbody>
</table>
<style>
    table {
        table-layout: fixed;
    }
    td {
        word-wrap: break-word
    }
</style>
<script>
    function myFunction() {
        // Declare variables
        var input, filter, table, tr, td, i, txtValue;
        input = document.getElementById("myInput");
        filter = input.value.toUpperCase();
        table = document.getElementById("myTable");
        tr = table.getElementsByTagName("tr");

        // Loop through all table rows, and hide those who don't match the search query
        for (i = 0; i < tr.length; i++) {
            td = tr[i].getElementsByTagName("td")[0];
            if (td) {
                txtValue = td.textContent || td.innerText;
                if (txtValue.toUpperCase().indexOf(filter) > -1) {
                    tr[i].style.display = "";
                } else {
                    tr[i].style.display = "none";
                }
            }
        }
    }
</script>